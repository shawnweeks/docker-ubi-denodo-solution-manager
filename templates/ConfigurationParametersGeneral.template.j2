# =============================================================================
# Global settings. They apply to all the monitors unless they are redefined.
# =============================================================================

# How often the Denodo Monitor backups (rollover) the logs that it generates:
#
# yyyy-MM: Rollover at the beginning of each month.
# yyyy-ww: Rollover at the first day of each week.
# yyyy-MM-dd: Rollover at midnight each day.
# yyyy-MM-dd-a: Rollover at midnight and midday of each day.
# yyyy-MM-dd-HH: Rollover at the top of every hour.
# yyyy-MM-dd-HH-mm: Rollover at the beginning of every minute.
# The pattern must follow the Java SimpleDateFormat conventions.
monitors.log.datepattern=yyyy-MM-dd


# Pattern used to write "date" values to the log files.
# This pattern must follow the Java SimpleDateFormat conventions.
format.datepattern=yyyy-MM-dd'T'HH:mm:ss.SSS


# =============================================================================
# Java Security Settings
# =============================================================================
# Uncomment this if SSL is enabled on the Denodo Platform servers.
#
# See more information about this in the section "Enable SSL Connection in the
# Denodo Platform Servers".
{% if DENODO_SSL_TRUSTSTORE is defined %}
com.denodo.security.ssl.trustStore={{ DENODO_SSL_TRUSTSTORE }}
{% endif %}


# =============================================================================
# Global Settings of the Threads Monitors
# =============================================================================
# These settings control the behavior of all the "threads" and "resources" 
# monitors.

# How often the "threads" monitors collect information, in seconds.
threads.interval=120

# How often the "threads" monitors backup (rollover) the logs that they generate.
# Uncomment to use a different value than the specified in the property 
# "monitors.log.datepattern".
#threads.log.datepattern=yyyy-MM-dd-HH

# =============================================================================
# Global Settings of the Resources Monitors
# =============================================================================

# How often the "resources" monitors collect information, in seconds.
resources.interval=30

# =============================================================================
# Settings of the Virtual DataPort monitors
# =============================================================================

#vdpqueries.log.datepattern=yyyy-MM-dd-a
#vdpqueries.jmx.database=admin
#vdploadcacheprocesses.jmx.database=admin
#vdpconnections.jmx.database=admin
#vdpdatasources.jmx.database=admin
# Resources monitor of Virtual DataPort: format of the messages stored in the log files. 
vdpresources.file.appender.pattern=%m%X{ServerName}%X{Host}%X{Port}%X{Date}%X{PermGen}%X{SurvivorSpace}%X{OldGen}%X{EdenSpace}%X{Code}%X{HeapMemoryUsage}%X{NonHeapMemoryUsage}%X{LoadedClassCount}%X{TotalLoadedClassCount}%X{ThreadCount}%X{PeakThreadCount}%X{VDPTotalConn}%X{VDPActiveConn}%X{VDPActiveRequests}%X{VDPWaitingRequests}%X{VDPTotalMem}%X{VDPMaxMem}%X{CpuUsage}%X{GcCollectionCount}%X{GcCollectionTime}%X{GcPartial}%X{GcTotal}%n

# Connections monitor of Virtual DataPort: format of the messages stored in the log files.
vdpconnections.file.appender.pattern=%m%X{ServerName}%X{Host}%X{Port}%X{NotificationType}%X{ConnectionId}%X{ConnectionStartTime}%X{ConnectionEndTime}%X{ClientIP}%X{UserAgent}%X{AccessInterface}%X{SessionId}%X{SessionStartTime}%X{SessionEndTime}%X{Login}%X{DatabaseName}%X{WebServiceName}%X{JMSQueueName}%X{IntermediateClientIP}%n

# Queries monitor of Virtual DataPort: format of the messages stored in the log files. 
vdpqueries.file.appender.pattern=%m%X{ServerName}%X{Host}%X{Port}%X{Id}%X{Database}%X{UserName}%X{NotificationType}%X{SessionId}%X{StartTime}%X{EndTime}%X{Duration}%X{WaitingTime}%X{NumRows}%X{State}%X{Completed}%X{Cache}%X{Query}%X{RequestType}%X{Elements}%X{UserAgent}%X{AccessInterface}%X{ClientIP}%X{TransactionId}%X{WebServiceName}%n

# Virtual DataPort Cache Monitor: format of the messages stored in the log files. 
vdploadcacheprocesses.file.appender.pattern=%m%X{SessionId}%X{ServerName}%X{Host}%X{Port}%X{NotificationType}%X{NotificationTimestamp}%X{Id}%X{QueryPatternId}%X{DatabaseName}%X{ViewName}%X{SqlViewName}%X{ProjectedFields}%X{NumConditions}%X{VDPConditionList}%X{CacheStatus}%X{TtlStatusInCache}%X{TtlInCache}%X{QueryPatternState}%X{Exception}%X{NumOfInsertedRows}%X{NumOfReceivedRows}%X{StartQueryPatternStorageTime}%X{EndQueryPatternStorageTime}%X{QueryPatternStorageTime}%X{StartCachedResultMetadataStorageTime}%X{EndCachedResultMetadataStorageTime}%X{CachedResultMetadataStorageTime}%X{StartDataStorageTime}%X{EndDataStorageTime}%X{DataStorageTime}%n

# Virtual DataPort Data Sources Monitor: format of the messages stored in the log files.
vdpdatasources.file.appender.pattern=%m%X{Date}%X{DatabaseName}%X{DataSourceType}%X{DataSourceName}%X{ActiveRequests}%X{NumRequests}%X{MaxActive}%X{NumActive}%X{NumIdle}%X{PingStatus}%X{PingExecutionTime}%X{PingDuration}%X{PingDownCause}%n

# =============================================================================
# Settings to store the output of the Virtual DataPort query monitor in a database
# =============================================================================
#
# To store the output of the Virtual DataPort query monitor in a database, do the following: 
#
#   1. Set "vdpqueries.jdbcagent.enable" to "true" and set the other "vdpqueries.jdbcagent" to point to the target database.
#
#   2. Create the tables with the appropriate structure in the target database (the folder "sql" contains a script 
#      that creates the required tables.
#
#   3. Copy the JDBC driver of the database (i.e. its jar file(s)) to the folder <DENODO_MONITOR>/lib.
# 
# "vdpqueries.jdbcagent.maxColumnLength" indicates the maximum length of the columns "query" and "elements". This 
# property is necessary because the maximum length of the VARCHAR type depends on the database used.
# If the value of one of these columns is longer than "maxColumnLength", its value will be truncated and the the column 
# "TruncatedData" set to 1.
# vdpqueries.jdbcagent.maxColumnLength is 4000 by default or if it is not specified.
vdpqueries.jdbcagent.enable=false

# JDBC Agent Parameters: Oracle
#vdpqueries.jdbcagent.driverClassName=oracle.jdbc.driver.OracleDriver
#vdpqueries.jdbcagent.url=jdbc:oracle:thin:@<server>:<port1521>:<sid>
#vdpqueries.jdbcagent.user=<user>
#vdpqueries.jdbcagent.password=<password>
#vdpqueries.jdbcagent.password.encrypted=false
#vdpqueries.jdbcagent.insertStatement=INSERT INTO request_notification values(DEFAULT,%X{ServerName},%X{Host},%X{Port},%X{Id},%X{Database},%X{UserName},%X{NotificationType},%X{SessionId},to_timestamp(%X{StartTime},'YYYY-MM-DD"T"HH24:MI:SS.FF3'),to_timestamp(%X{EndTime},'YYYY-MM-DD"T"HH24:MI:SS.FF3'),%X{Duration},%X{WaitingTime},%X{NumRows},%X{State},%X{Completed},%X{Cache},%X{Query},%X{RequestType},%X{Elements},%X{TruncatedData},%X{UserAgent},%X{AccessInterface},%X{ClientIP},%X{TransactionId},%X{WebServiceName})
#vdpqueries.jdbcagent.literalQuoteCharacter='
#vdpqueries.jdbcagent.escapeCharacter='
#vdpqueries.jdbcagent.maxColumnLength=4000

# JDBC Agent Parameters: MySQL
#vdpqueries.jdbcagent.driverClassName=com.mysql.jdbc.Driver
#vdpqueries.jdbcagent.url=jdbc:mysql://<server>:<port3306>/<database>
#vdpqueries.jdbcagent.user=<user>
#vdpqueries.jdbcagent.password=<password>
#vdpqueries.jdbcagent.password.encrypted=false
#vdpqueries.jdbcagent.insertStatement=INSERT INTO request_notification values(DEFAULT,%X{ServerName},%X{Host},%X{Port},%X{Id},%X{Database},%X{UserName},%X{NotificationType},%X{SessionId},str_to_date(%X{StartTime},'%%Y-%%m-%%dT%%k:%%i:%%s.%%f'),str_to_date(%X{EndTime},'%%Y-%%m-%%dT%%k:%%i:%%s.%%f'),%X{Duration},%X{WaitingTime},%X{NumRows},%X{State},%X{Completed},%X{Cache},%X{Query},%X{RequestType},%X{Elements},%X{TruncatedData},%X{UserAgent},%X{AccessInterface},%X{ClientIP},%X{TransactionId},%X{WebServiceName})
#vdpqueries.jdbcagent.literalQuoteCharacter='
#vdpqueries.jdbcagent.escapeCharacter='
#vdpqueries.jdbcagent.maxColumnLength=4000

# JDBC Agent Parameters: PostgreSQL
#vdpqueries.jdbcagent.driverClassName=org.postgresql.Driver
#vdpqueries.jdbcagent.url=jdbc:postgresql://<server>:<port5432>/<database>
#vdpqueries.jdbcagent.user=<user>
#vdpqueries.jdbcagent.password=<password>
#vdpqueries.jdbcagent.password.encrypted=false
#vdpqueries.jdbcagent.insertStatement=INSERT INTO request_notification values(DEFAULT,%X{ServerName},%X{Host},%X{Port},%X{Id},%X{Database},%X{UserName},%X{NotificationType},%X{SessionId},to_timestamp(%X{StartTime},'YYYY-MM-DD"T"HH24:MI:SS.FF3'),to_timestamp(%X{EndTime},'YYYY-MM-DD"T"HH24:MI:SS.FF3'),%X{Duration},%X{WaitingTime},%X{NumRows},%X{State},%X{Completed},%X{Cache},%X{Query},%X{RequestType},%X{Elements},%X{TruncatedData},%X{UserAgent},%X{AccessInterface},%X{ClientIP},%X{TransactionId},%X{WebServiceName})
#vdpqueries.jdbcagent.literalQuoteCharacter='
#vdpqueries.jdbcagent.escapeCharacter='
#vdpqueries.jdbcagent.maxColumnLength=4000

# JDBC Agent Parameters: DB2
#vdpqueries.jdbcagent.driverClassName=com.ibm.db2.jcc.DB2Driver
#vdpqueries.jdbcagent.url=jdbc:db2://<server>:<port50000>/<database>
#vdpqueries.jdbcagent.user=<user>
#vdpqueries.jdbcagent.password=<password>
#vdpqueries.jdbcagent.password.encrypted=false
#vdpqueries.jdbcagent.insertStatement=INSERT INTO request_notification values(DEFAULT,%X{ServerName},%X{Host},%X{Port},%X{Id},%X{Database},%X{UserName},%X{NotificationType},%X{SessionId},to_timestamp(replace(%X{StartTime},'T',''),'YYYY-MM-DDHH24:MI:SS.FF3'),to_timestamp(replace(%X{EndTime},'T',''),'YYYY-MM-DDHH24:MI:SS.FF3'),%X{Duration},%X{WaitingTime},%X{NumRows},%X{State},%X{Completed},%X{Cache},%X{Query},%X{RequestType},%X{Elements},%X{TruncatedData},%X{UserAgent},%X{AccessInterface},%X{ClientIP},%X{TransactionId},%X{WebServiceName})
#vdpqueries.jdbcagent.literalQuoteCharacter='
#vdpqueries.jdbcagent.escapeCharacter='
#vdpqueries.jdbcagent.maxColumnLength=4000

# JDBC Agent Parameters: SQLServer (jTDS)
#vdpqueries.jdbcagent.driverClassName=net.sourceforge.jtds.jdbc.Driver
#vdpqueries.jdbcagent.url=jdbc:jtds:sqlserver://<server>:<port1433>;DatabaseName=<database>
#vdpqueries.jdbcagent.user=<user>
#vdpqueries.jdbcagent.password=<password>
#vdpqueries.jdbcagent.password.encrypted=false
#vdpqueries.jdbcagent.insertStatement=INSERT INTO request_notification values(%X{ServerName},%X{Host},%X{Port},%X{Id},%X{Database},%X{UserName},%X{NotificationType},%X{SessionId},convert(datetime,%X{StartTime},126),convert(datetime,%X{EndTime},126),%X{Duration},%X{WaitingTime},%X{NumRows},%X{State},%X{Completed},%X{Cache},%X{Query},%X{RequestType},%X{Elements},%X{TruncatedData},%X{UserAgent},%X{AccessInterface},%X{ClientIP},%X{TransactionId},%X{WebServiceName})
#vdpqueries.jdbcagent.literalQuoteCharacter='
#vdpqueries.jdbcagent.escapeCharacter='
#vdpqueries.jdbcagent.maxColumnLength=4000


# =============================================================================
# Settings to store the output of the Virtual DataPort cache monitor in a database
# =============================================================================
#
# To store the output of the Virtual DataPort cache monitor in a database, do the following: 
#
#   1. Set "vdploadcacheprocesses.jdbcagent.enable" to "true" and set the other "vdploadcacheprocesses.jdbcagent" to 
#      point to the target database.
#
#   2. Create the tables with the appropriate structure in the target database (the folder "sql" contains a script 
#      that creates the required tables.
#
#   3. Copy the JDBC driver of the database (i.e. its jar file(s)) to the folder <DENODO_MONITOR>/lib.
#
# "vdploadcacheprocesses.jdbcagent.maxColumnLength" indicates the maximum length of the columns "projectedfields", 
# "exception" and "vdpconditionlist". This property is necessary because the maximum length of the VARCHAR type depends
# on the database used.
# If the value of one of these columns is longer than "maxColumnLength", its value will be truncated and the the column 
# "TruncatedData" set to 1.
# vdploadcacheprocesses.jdbcagent.maxColumnLength is 4000 by default or if it is not specified.
vdploadcacheprocesses.jdbcagent.enable=false

# JDBC Agent Parameters (cache): Oracle
#vdploadcacheprocesses.jdbcagent.driverClassName=oracle.jdbc.driver.OracleDriver
#vdploadcacheprocesses.jdbcagent.url=jdbc:oracle:thin:@<server>:<port1521>:<sid>
#vdploadcacheprocesses.jdbcagent.user=<user>
#vdploadcacheprocesses.jdbcagent.password=<password>
#vdploadcacheprocesses.jdbcagent.password.encrypted=false
#vdploadcacheprocesses.jdbcagent.insertStatement=INSERT INTO cache_notification values(%X{ServerName},%X{Host}, %X{Port}, %X{SessionId}, %X{NotificationType}, to_timestamp(%X{NotificationTimestamp},'YYYY-MM-DD"T"HH24:MI:SS.FF3'), %X{Id}, %X{QueryPatternId}, %X{DatabaseName}, %X{ViewName}, %X{ViewId}, %X{SqlViewName}, %X{ProjectedFields}, %X{NumConditions}, %X{VDPConditionList}, %X{CacheStatus}, %X{TtlStatusInCache}, %X{TtlInCache}, %X{QueryPatternState}, %X{Exception}, %X{NumOfInsertedRows}, %X{NumOfReceivedRows}, to_timestamp(%X{StartQueryPatternStorageTime},'YYYY-MM-DD"T"HH24:MI:SS.FF3'), to_timestamp(%X{EndQueryPatternStorageTime},'YYYY-MM-DD"T"HH24:MI:SS.FF3'), %X{QueryPatternStorageTime}, to_timestamp(%X{StartCachedResultMetadataStorageTime},'YYYY-MM-DD"T"HH24:MI:SS.FF3'), to_timestamp(%X{EndCachedResultMetadataStorageTime},'YYYY-MM-DD"T"HH24:MI:SS.FF3'), %X{CachedResultMetadataStorageTime}, to_timestamp(%X{StartDataStorageTime},'YYYY-MM-DD"T"HH24:MI:SS.FF3'), to_timestamp(%X{EndDataStorageTime},'YYYY-MM-DD"T"HH24:MI:SS.FF3'), %X{DataStorageTime}, %X{TruncatedData})
#vdploadcacheprocesses.jdbcagent.literalQuoteCharacter='
#vdploadcacheprocesses.jdbcagent.escapeCharacter='
#vdploadcacheprocesses.jdbcagent.maxColumnLength=4000

# JDBC Agent Parameters (cache): MySQL
#vdploadcacheprocesses.jdbcagent.driverClassName=com.mysql.jdbc.Driver
#vdploadcacheprocesses.jdbcagent.url=jdbc:mysql://<server>:<port3306>/<database>
#vdploadcacheprocesses.jdbcagent.user=<user>
#vdploadcacheprocesses.jdbcagent.password=<password>
#vdploadcacheprocesses.jdbcagent.password.encrypted=false
#vdploadcacheprocesses.jdbcagent.insertStatement=INSERT INTO cache_notification values(%X{ServerName},%X{Host}, %X{Port}, %X{SessionId}, %X{NotificationType}, str_to_date(%X{NotificationTimestamp},'%%Y-%%m-%%dT%%k:%%i:%%s.%%f'), %X{Id}, %X{QueryPatternId}, %X{DatabaseName}, %X{ViewName}, %X{ViewId}, %X{SqlViewName}, %X{ProjectedFields}, %X{NumConditions}, %X{VDPConditionList}, %X{CacheStatus}, %X{TtlStatusInCache}, %X{TtlInCache}, %X{QueryPatternState}, %X{Exception}, %X{NumOfInsertedRows}, %X{NumOfReceivedRows}, str_to_date(%X{StartQueryPatternStorageTime},'%%Y-%%m-%%dT%%k:%%i:%%s.%%f'), str_to_date(%X{EndQueryPatternStorageTime},'%%Y-%%m-%%dT%%k:%%i:%%s.%%f'), %X{QueryPatternStorageTime}, str_to_date(%X{StartCachedResultMetadataStorageTime},'%%Y-%%m-%%dT%%k:%%i:%%s.%%f'), str_to_date(%X{EndCachedResultMetadataStorageTime},'%%Y-%%m-%%dT%%k:%%i:%%s.%%f'), %X{CachedResultMetadataStorageTime}, str_to_date(%X{StartDataStorageTime},'%%Y-%%m-%%dT%%k:%%i:%%s.%%f'), str_to_date(%X{EndDataStorageTime},'%%Y-%%m-%%dT%%k:%%i:%%s.%%f'), %X{DataStorageTime}, %X{TruncatedData})
#vdploadcacheprocesses.jdbcagent.literalQuoteCharacter='
#vdploadcacheprocesses.jdbcagent.escapeCharacter='
#vdploadcacheprocesses.jdbcagent.maxColumnLength=4000

# JDBC Agent Parameters (cache): PostgreSQL
#vdploadcacheprocesses.jdbcagent.driverClassName=org.postgresql.Driver
#vdploadcacheprocesses.jdbcagent.url=jdbc:postgresql://<server>:<port5432>/<database>
#vdploadcacheprocesses.jdbcagent.user=<user>
#vdploadcacheprocesses.jdbcagent.password=<password>
#vdploadcacheprocesses.jdbcagent.password.encrypted=false
#vdploadcacheprocesses.jdbcagent.insertStatement=INSERT INTO cache_notification values(%X{ServerName},%X{Host}, %X{Port}, %X{SessionId}, %X{NotificationType}, to_timestamp(%X{NotificationTimestamp},'YYYY-MM-DD"T"HH24:MI:SS.FF3'), %X{Id}, %X{QueryPatternId}, %X{DatabaseName}, %X{ViewName}, %X{ViewId}, %X{SqlViewName}, %X{ProjectedFields}, %X{NumConditions}, %X{VDPConditionList}, %X{CacheStatus}, %X{TtlStatusInCache}, %X{TtlInCache}, %X{QueryPatternState}, %X{Exception}, %X{NumOfInsertedRows}, %X{NumOfReceivedRows}, to_timestamp(%X{StartQueryPatternStorageTime},'YYYY-MM-DD"T"HH24:MI:SS.FF3'), to_timestamp(%X{EndQueryPatternStorageTime},'YYYY-MM-DD"T"HH24:MI:SS.FF3'), %X{QueryPatternStorageTime}, to_timestamp(%X{StartCachedResultMetadataStorageTime},'YYYY-MM-DD"T"HH24:MI:SS.FF3'), to_timestamp(%X{EndCachedResultMetadataStorageTime},'YYYY-MM-DD"T"HH24:MI:SS.FF3'), %X{CachedResultMetadataStorageTime}, to_timestamp(%X{StartDataStorageTime},'YYYY-MM-DD"T"HH24:MI:SS.FF3'), to_timestamp(%X{EndDataStorageTime},'YYYY-MM-DD"T"HH24:MI:SS.FF3'), %X{DataStorageTime}, %X{TruncatedData})
#vdploadcacheprocesses.jdbcagent.literalQuoteCharacter='
#vdploadcacheprocesses.jdbcagent.escapeCharacter='
#vdploadcacheprocesses.jdbcagent.maxColumnLength=4000

# JDBC Agent Parameters (cache): DB2
#vdploadcacheprocesses.jdbcagent.driverClassName=com.ibm.db2.jcc.DB2Driver
#vdploadcacheprocesses.jdbcagent.url=jdbc:db2://<server>:<port50000>/<database>
#vdploadcacheprocesses.jdbcagent.user=<user>
#vdploadcacheprocesses.jdbcagent.password=<password>
#vdploadcacheprocesses.jdbcagent.password.encrypted=false
#vdploadcacheprocesses.jdbcagent.insertStatement=INSERT INTO cache_notification values(%X{ServerName},%X{Host}, %X{Port}, %X{SessionId}, %X{NotificationType}, to_timestamp(replace(%X{NotificationTimestamp},'T',' '),'YYYY-MM-DD HH24:MI:SS.FF3'), %X{Id}, %X{QueryPatternId}, %X{DatabaseName}, %X{ViewName}, %X{ViewId}, %X{SqlViewName}, %X{ProjectedFields}, %X{NumConditions}, %X{VDPConditionList}, %X{CacheStatus}, %X{TtlStatusInCache}, %X{TtlInCache}, %X{QueryPatternState}, %X{Exception}, %X{NumOfInsertedRows}, %X{NumOfReceivedRows}, to_timestamp(replace(%X{StartQueryPatternStorageTime},'T',' '),'YYYY-MM-DD HH24:MI:SS.FF3'), to_timestamp(replace(%X{EndQueryPatternStorageTime},'T',' '),'YYYY-MM-DD HH24:MI:SS.FF3'), %X{QueryPatternStorageTime}, to_timestamp(replace(%X{StartCachedResultMetadataStorageTime},'T',' '),'YYYY-MM-DD HH24:MI:SS.FF3'), to_timestamp(replace(%X{EndCachedResultMetadataStorageTime},'T',' '),'YYYY-MM-DD HH24:MI:SS.FF3'), %X{CachedResultMetadataStorageTime}, to_timestamp(replace(%X{StartDataStorageTime},'T',' '),'YYYY-MM-DD HH24:MI:SS.FF3'), to_timestamp(replace(%X{EndDataStorageTime},'T',' '),'YYYY-MM-DD HH24:MI:SS.FF3'), %X{DataStorageTime}, %X{TruncatedData})
#vdploadcacheprocesses.jdbcagent.literalQuoteCharacter='
#vdploadcacheprocesses.jdbcagent.escapeCharacter='
#vdploadcacheprocesses.jdbcagent.maxColumnLength=4000

# JDBC Agent Parameters (cache): SQLServer (jTDS)
#vdploadcacheprocesses.jdbcagent.driverClassName=net.sourceforge.jtds.jdbc.Driver
#vdploadcacheprocesses.jdbcagent.url=jdbc:jtds:sqlserver://<server>:<port1433>;DatabaseName=<database>
#vdploadcacheprocesses.jdbcagent.user=<user>
#vdploadcacheprocesses.jdbcagent.password=<password>
#vdploadcacheprocesses.jdbcagent.password.encrypted=false
#vdploadcacheprocesses.jdbcagent.insertStatement=INSERT INTO cache_notification values(%X{ServerName},%X{Host}, %X{Port}, %X{SessionId}, %X{NotificationType}, convert(datetime, %X{NotificationTimestamp}, 126), %X{Id}, %X{QueryPatternId}, %X{DatabaseName}, %X{ViewName}, %X{ViewId}, %X{SqlViewName}, %X{ProjectedFields}, %X{NumConditions}, %X{VDPConditionList}, %X{CacheStatus}, %X{TtlStatusInCache}, %X{TtlInCache}, %X{QueryPatternState}, %X{Exception}, %X{NumOfInsertedRows}, %X{NumOfReceivedRows}, convert(datetime, %X{StartQueryPatternStorageTime}, 126), convert(datetime, %X{EndQueryPatternStorageTime}, 126), %X{QueryPatternStorageTime}, convert(datetime, %X{StartCachedResultMetadataStorageTime}, 126), convert(datetime, %X{EndCachedResultMetadataStorageTime}, 126), %X{CachedResultMetadataStorageTime}, convert(datetime, %X{StartDataStorageTime}, 126), convert(datetime, %X{EndDataStorageTime}, 126), %X{DataStorageTime}, %X{TruncatedData})
#vdploadcacheprocesses.jdbcagent.literalQuoteCharacter='
#vdploadcacheprocesses.jdbcagent.escapeCharacter='
#vdploadcacheprocesses.jdbcagent.maxColumnLength=4000


# =============================================================================
# Settings to send SNMP traps with the output of the Virtual DataPort query monitor
# =============================================================================
#
# To send SNMP traps with the output of the Virtual DataPort query monitor, set "vdpqueries.snmptrapagent.enable" to "true".
# Then, set the value of the other "vdpqueries.snmptrapagent" properties.

vdpqueries.snmptrapagent.enable=false
#vdpqueries.snmptrapagent.version=1
#vdpqueries.snmptrapagent.community=public
#vdpqueries.snmptrapagent.localIPAddress=localhost
#vdpqueries.snmptrapagent.targetaddress=localhost
#vdpqueries.snmptrapagent.targetport=162
#vdpqueries.snmptrapagent.applicationOID=1.2.3.4.5.6.96
#vdpqueries.snmptrapagent.enterpriseOID=1.2.3.4.5.6.95

# Queries monitor: format of the messages sent as SNMP traps 
vdpqueries.snmp.appender.pattern=%m%X{ServerName}%X{Host}%X{Port}%X{Id}%X{Database}%X{UserName}%X{NotificationType}%X{SessionId}%X{StartTime}%X{EndTime}%X{Duration}%X{WaitingTime}%X{NumRows}%X{State}%X{Completed}%X{Cache}%X{Query}%X{RequestType}%X{Elements}%X{UserAgent}%X{AccessInterface}%X{ClientIP}%X{TransactionId}%n

# =============================================================================
# Settings to send SNMP traps with the output of the Virtual DataPort cache monitor
# =============================================================================
#
# To send SNMP traps with the output of the Virtual DataPort cache monitor, set "vdploadcacheprocesses.snmptrapagent.enable" 
# to "true".
# Then, set the value of the other "vdploadcacheprocesses.snmptrapagent" properties.

vdploadcacheprocesses.snmptrapagent.enable=false
#vdploadcacheprocesses.snmptrapagent.version=1
#vdploadcacheprocesses.snmptrapagent.community=public
#vdploadcacheprocesses.snmptrapagent.localIPAddress=localhost
#vdploadcacheprocesses.snmptrapagent.targetaddress=localhost
#vdploadcacheprocesses.snmptrapagent.targetport=162
#vdploadcacheprocesses.snmptrapagent.applicationOID=1.2.3.4.5.6.97
#vdploadcacheprocesses.snmptrapagent.enterpriseOID=1.2.3.4.5.6.98

# Virtual DataPort cache monitor: format of the messages sent as SNMP traps 
vdploadcacheprocesses.snmp.appender.pattern=%m%X{SessionId}%X{ServerName}%X{Host}%X{Port}%X{NotificationType}%X{NotificationTimestamp}%X{Id}%X{QueryPatternId}%X{DatabaseName}%X{ViewName}%X{SqlViewName}%X{ProjectedFields}%X{NumConditions}%X{VDPConditionList}%X{CacheStatus}%X{TtlStatusInCache}%X{TtlInCache}%X{QueryPatternState}%X{Exception}%X{NumOfInsertedRows}%X{NumOfReceivedRows}%X{StartQueryPatternStorageTime}%X{EndQueryPatternStorageTime}%X{QueryPatternStorageTime}%X{StartCachedResultMetadataStorageTime}%X{EndCachedResultMetadataStorageTime}%X{CachedResultMetadataStorageTime}%X{StartDataStorageTime}%X{EndDataStorageTime}%X{DataStorageTime}%n

# User agent of the monitors. 
fullthreaddump.useragent=Denodo-Monitor-Threads
heapdump.useragent= Denodo-Monitor-HeapDump
resources.useragent=Denodo-Monitor-Resources
vdpconnections.useragent=Denodo-Monitor-Connections
vdploadcacheprocesses.useragent=Denodo-Monitor-LoadCacheProcesses
vdpqueries.useragent=Denodo-Monitor-Queries
vdpdatasources.useragent=Denodo-Monitor-DataSources


# =============================================================================
# Denodo servers that will be monitored
# =============================================================================
#
# List of Denodo servers to monitor.
#
monitors.remote=[[VDP_SERVERS_LIST]]