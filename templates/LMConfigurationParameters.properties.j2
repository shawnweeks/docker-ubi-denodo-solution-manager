###############################################################################
#  LICENSE MANAGER SERVER CONFIGURATION                                       #
###############################################################################
server.port=10091

# Storage Manager Factory
com.denodo.solutionmanager.storage.StorageManagerFactory.className=com.denodo.solutionmanager.storage.DerbyStorageManager
com.denodo.solutionmanager.storage.StorageManagerFactory.provider=embedded_derby

# Derby Storage Manager 
com.denodo.solutionmanager.storage.DerbyStorageManager.derbyHome=/opt/denodo/metadata/solution-manager/db
com.denodo.solutionmanager.storage.DerbyStorageManager.derbyHost=localhost
com.denodo.solutionmanager.storage.DerbyStorageManager.derbyPort=11526

spring.data.rest.defaultMediaType=application/json
spring.hateoas.use-hal-as-default-json-media-type=false
spring.jpa.hibernate.ddl-auto=none

java.env.DENODO_OPTS_START=-mx1024m
com.denodo.licensemanager.rmi.host=localhost

com.denodo.solutionmanager.utils.LicenseManager.iconRoute=/opt/denodo/resources/license-manager/ico
com.denodo.vdb.install=/opt/denodo/

# Timezone
com.denodo.solutionmanager.timezone=UTC

# Grace period (in minutes)
com.denodo.licensemanager.gracePeriod=7200
# License ACK timeout (in milliseconds)
com.denodo.licensemanager.licenseACKTimeout=2000
# Server Refresh Interval (in minutes)
com.denodo.licensemanager.refreshInterval=10

{% if DENODO_SSL_ENABLED is defined and DENODO_SSL_ENABLED == 'true' %}
server.ssl.key-store={{ DENODO_SSL_KEYSTORE | default('') }}
server.ssl.key-store-password={{ DENODO_SSL_KEYSTORE_PASSWORD | default('') }}
#server.ssl.key-store-password.encrypted=
{% if DENODO_SSL_TRUSTSTORE is defined %}
com.denodo.security.ssl.trustStore={{ DENODO_SSL_TRUSTSTORE | default('') }}
com.denodo.security.ssl.trustStorePassword={{ DENODO_SSL_TRUSTSTORE_PASSWORD | default('') }}
#com.denodo.security.ssl.trustStorePassword.encrypted=
{% endif %}
{% endif %}